# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :prometheus=> {
	  :box_name => "rta/orelnogui",
        :ip_addr => '192.168.11.240'
  },
  :nginx01=> {
	  :box_name => "rta/orelnogui",
        :ip_addr => '192.168.11.241'
  }
 }

Vagrant.configure("2") do |config|
	config.vm.synced_folder ".", "/vagrant", type: "virtualbox"
	config.vm.box_check_update = false
		MACHINES.each do |boxname, boxconfig|
			config.vm.define boxname do |box|
			box.vm.box = boxconfig[:box_name]
			box.vm.host_name = boxname.to_s
			box.vbguest.installer_options = { allow_kernel_upgrade: true }
			box.vm.network "private_network", ip: boxconfig[:ip_addr]
			box.vm.provider :virtualbox do |vb|
				vb.customize ["modifyvm", :id, "--memory", "2048"]
            end
			box.vm.provision "shell", inline: <<-SHELL
				mkdir -p ~root/.ssh
				cp ~vagrant/.ssh/auth* ~root/.ssh
				sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config;
				systemctl restart sshd;

				sudo adduser superuser > /dev/null 2>&1
				sudo echo "superuser:87654321" | chpasswd > /dev/null 2>&1
                                sudo usermod -aG astra-admin superuser > /dev/null 2>&1
                                sudo usermod -aG astra-console superuser > /dev/null 2>&1

			SHELL
			end
		end

#    config.vm.provision "ansible" do |ansible|
#    	ansible.playbook = "provisioning/master-mysql.yml"
#    	ansible.playbook = "provisioning/slave-mysql.yml"
#    	ansible.become = "true"
#    end

	config.vm.define "prometheus" do |prometheus|
        prometheus.vm.provision "shell", inline: <<-SHELL

          sudo apt update > /dev/null 2>&1

          #Установка дополнительных пакетов для grafana
          sudo apt install -y apt-transport-https
          sudo apt install -y software-properties-common wget
          sudo wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add - > /dev/null 2>&1
          sudo echo "deb https://packages.grafana.com/enterprise/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
          sudo apt update  > /dev/null 2>&1

          # Создание группы и системного пользователя prometheus
          sudo groupadd --system prometheus
          sudo useradd -s /sbin/nologin --system -g prometheus prometheus

          sudo wget https://github.com/prometheus/prometheus/releases/download/v2.31.1/prometheus-2.31.1.linux-amd64.tar.gz -O /vagrant/prometheus-2.31.1.linux-amd64.tar.gz > /dev/null 2>&1
          sudo tar -xvzf /vagrant/prometheus-2.31.1.linux-amd64.tar.gz -C /vagrant/files/ > /dev/null 2>&1
          sudo rm -rf /vagrant/prometheus-2.31.1.linux-amd64.tar.gz
          
	  #Копирование ьинарных файлов prometheus в исполняемый каталог
          sudo cp /vagrant/files/prometheus-2.31.1.linux-amd64/prometheus  /usr/local/bin
          sudo cp /vagrant/files/prometheus-2.31.1.linux-amd64/promtool /usr/local/bin

          # Изменение владельца на prometheus исполняемых файлов prometheus
          sudo chown prometheus:prometheus /usr/local/bin/prometheus
          sudo chown prometheus:prometheus /usr/local/bin/promtool

          #Создание каталога /etc/prometheus и перенос необходимых файлов
          sudo mkdir /etc/prometheus
          sudo cp -R /vagrant/files/prometheus-2.31.1.linux-amd64/consoles/ /etc/prometheus
          sudo cp -R /vagrant/files/prometheus-2.31.1.linux-amd64/console_libraries/ /etc/prometheus
          sudo cp /vagrant/files/prometheus-2.31.1.linux-amd64/prometheus.yml /etc/prometheus
          sudo cp /vagrant/files/config_prometheus/prometheus.yml /etc/prometheus

          #Создание каталога для хранения данных и смена вдалельца на prometheus
          sudo mkdir -p /data/prometheus
          sudo chown -R prometheus:prometheus /data/prometheus /etc/prometheus/*

          #Перенос файла юнита для запуска prometheus
          sudo cp /vagrant/files/systemd/prometheus.service /etc/systemd/system/

          #Перезагрузка файлов юнитов и запуск prometheus
          sudo systemctl daemon-reload > /dev/null 2>&1
          sudo systemctl start prometheus > /dev/null 2>&1
          sudo systemctl enable prometheus > /dev/null 2>&1

           rm -fr /vagrant/files/prometheus*

          # Копирование бинарного файла node_exporter в исполняемый каталог сервера prometheus
          
          sudo wget https://github.com/prometheus/node_exporter/releases/download/v1.3.1/node_exporter-1.3.1.linux-amd64.tar.gz -O /vagrant/node_exporter-1.3.1.linux-amd64.tar.gz > /dev/null 2>&1
          sudo tar -xvzf /vagrant/node_exporter-1.3.1.linux-amd64.tar.gz -C /vagrant/files/ > /dev/null 2>&1
          sudo cp /vagrant/files/node_exporter-1.3.1.linux-amd64/node_exporter /usr/local/bin
          sudo rm -rf node_exporter-1.3.1.linux-arm64.tar.gz /vagrant/files/node_exporter*

          # системного пользователя node_exporter
          sudo useradd --no-create-home --home-dir / --shell /bin/false node_exporter

          #Перенос файла юнита для запуска node_exporter
          sudo cp /vagrant/files/systemd/node_exporter.service /etc/systemd/system/
		  
          #Перезагрузка файлов юнитов и запуск node_exporter
          sudo systemctl daemon-reload > /dev/null 2>&1
          sudo systemctl start node_exporter > /dev/null 2>&1
          sudo systemctl enable node_exporter > /dev/null 2>&1

          # Установка grafana
          sudo apt install -y grafana-enterprise
          sudo systemctl daemon-reload > /dev/null 2>&1
          sudo systemctl start grafana-server.service > /dev/null 2>&1
          sudo systemctl enable grafana-server.service > /dev/null 2>&1

       SHELL

end

       config.vm.define "nginx01" do |nginx01|
               nginx01.vm.provision "shell", inline: <<-SHELL

               sudo apt update > /dev/null 2>&1

               # Установка и настройка nginx
               sudo apt -y install nginx
               sudo cp /vagrant/files/config-nginx/default /etc/nginx/sites-available/
               sudo systemctl restart nginx > /dev/null 2>&1
               sudo systemctl enable nginx > /dev/null 2>&1

               # Создание учетной записи для работы nginx_exporter
               sudo useradd -s /bin/false -c 'nginx_exporter service account' -r prometheus

               # Установка и настройка nginx_exporter
			   
	       sudo wget https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v0.9.0/nginx-prometheus-exporter_0.9.0_linux_amd64.tar.gz -O /vagrant/nginx-prometheus-exporter_0.9.0_linux_amd64.tar.gz > /dev/null 2>&1
	       sudo tar -xvzf /vagrant/nginx-prometheus-exporter_0.9.0_linux_amd64.tar.gz -C /vagrant/files/ > /dev/null 2>&1
               sudo cp /vagrant/files/nginx_exporter_0.9.0.linux-amd64/nginx-prometheus-exporter /usr/local/bin
               sudo cp /vagrant/files/systemd/nginx_exporter.service /etc/systemd/system/
			   
	       sudo rm -rf /vagrant/files/nginx_exporter*  
               
	       sudo systemctl daemon-reload > /dev/null 2>&1
               sudo systemctl start nginx_exporter.service > /dev/null 2>&1
               sudo systemctl enable nginx_exporter.service > /dev/null 2>&1
             
               sudo wget https://github.com/prometheus/node_exporter/releases/download/v1.3.1/node_exporter-1.3.1.linux-amd64.tar.gz -O /vagrant/node_exporter-1.3.1.linux-amd64.tar.gz > /dev/null 2>&1
               sudo tar -xvzf /vagrant/node_exporter-1.3.1.linux-amd64.tar.gz -C /vagrant/files/ > /dev/null 2>&1
               sudo cp /vagrant/files/node_exporter-1.3.1.linux-amd64/node_exporter /usr/local/bin
               sudo rm -rf node_exporter-1.3.1.linux-arm64.tar.gz /vagrant/files/node_exporter*

               # системного пользователя node_exporter
               sudo useradd --no-create-home --home-dir / --shell /bin/false node_exporter

               #Перенос файла юнита для запуска node_exporter
               sudo cp /vagrant/files/systemd/node_exporter.service /etc/systemd/system/

               #Перезагрузка файлов юнитов и запуск node_exporter
               sudo systemctl daemon-reload > /dev/null 2>&1
               sudo systemctl start node_exporter > /dev/null 2>&1
               sudo systemctl enable node_exporter > /dev/null 2>&1

            SHELL

 end

end
